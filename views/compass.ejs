<%- contentFor('body')%>

<div id="app_page">
  <h1>
    {{ title }}
  </h1>
  <div class="garden">
    <div class="ball"></div>
  </div>
  <pre class="output"></pre>
</div>

<%- contentFor('js')%>

<script type="text/javascript">
  //https://developer.mozilla.org/zh-TW/docs/Web/API/Detecting_device_orientation
  var ball = document.querySelector('.ball');
  var garden = document.querySelector('.garden');
  var output = document.querySelector('.output');

  var maxX = garden.clientWidth - ball.clientWidth;
  var maxY = garden.clientHeight - ball.clientHeight;

  function handleOrientation(event) {
    var absolute = event.absolute;
    var alpha = event.alpha;
    var beta = event.beta;
    var gamma = event.gamma;
    // Do stuff with the new orientation data

    var x = event.beta; // In degree in the range [-180,180]
    var y = event.gamma; // In degree in the range [-90,90]

    output.innerHTML = 'beta : ' + x + '\n';
    output.innerHTML += 'gamma: ' + y + '\n';

    // Because we don't want to have the device upside down
    // We constrain the x value to the range [-90,90]
    if (x > 90) {
      x = 90;
    }
    if (x < -90) {
      x = -90;
    }

    // To make computation easier we shift the range of
    // x and y to [0,180]
    x += 90;
    y += 90;

    // 10 is half the size of the ball
    // It center the positioning point to the center of the ball
    ball.style.top = (maxX * x) / 180 - 10 + 'px';
    ball.style.left = (maxY * y) / 180 - 10 + 'px';
  }

  window.onload = function() {
    //判断移动浏览器是否支持运动传感器事件
    if (window.DeviceMotionEvent) {
      //添加一个事件监听器
      window.addEventListener('deviceorientation', handleOrientation, true);
    } else {
      alert('not support a window.DeviceMotionEvent');
    }
  };
</script>

<script>
  //var dataString = '<%-dataString%>';

  var app_page = new Vue({
    el: '#app_page',
    data: {
      cool: '<%=cool%>',
      title: '<%=title%>',
      loading: false,
      compass: []
    },
    mounted: function() {},
    created: function() {
      // `this` points to the vm instance
      var jsonString = '<%-dataString%>';
      if (jsonString !== '') this.compass = JSON.parse(jsonString);
    },
    //el methods
    methods: {}
  });
</script>

<%- contentFor('css')%>
<style>
  .garden {
    position: relative;
    width: 200px;
    height: 200px;
    border: 5px solid #ccc;
    border-radius: 10px;
  }

  .ball {
    position: absolute;
    top: 90px;
    left: 90px;
    width: 20px;
    height: 20px;
    background: green;
    border-radius: 100%;
  }
</style>
